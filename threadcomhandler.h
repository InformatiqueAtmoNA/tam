/*////////////////////////////////////////////////////
// \file threadcomhandler.h
// \brief Classe implémentant un thread gérant la communication RS232
// \author FOUQUART Christophe
// \version 0.1
// \date 01/03/2011
////////////////////////////////////////////////////*/

#ifndef THREADCOMHANDLER_H
#define THREADCOMHANDLER_H

#include <QtCore>
#include <QThread>
#include "communicationserie.h"

/*////////////////////////////////////////////////////////////////////////////////////
// \class ThreadComHandler
// \brief Classe implémentant un thread gérant la communication RS232
////////////////////////////////////////////////////////////////////////////////////*/

class ThreadComHandler : public QThread
{
    Q_OBJECT
private:
    CommunicationSerie* comRS232; // Gère la communication RS232
    bool flagStop; // Indique que le thread doit s'arrêter

public:
    /*///////////////////////////////////////////////////////////////////////////
    // \fn ThreadComHandler()
    // \brief Constructeur par défaut
    ///////////////////////////////////////////////////////////////////////////*/
    ThreadComHandler();

    /*///////////////////////////////////////////////////////////////////////////
    // \fn ~ThreadComHandler()
    // \brief Destructeur
    ///////////////////////////////////////////////////////////////////////////*/
    ~ThreadComHandler();

    /*///////////////////////////////////////////////////////////////////////////
    // \fn void run()
    // \brief Exécute une boucle infinie permettant d'utiliser les signaux/slots
    ///////////////////////////////////////////////////////////////////////////*/
    void run();

public slots:
    /*///////////////////////////////////////////////////////////////////////////
    // \fn void configureRS232()
    // \brief Configure la liaison RS232
    //
    // \param deviceName Identifiant du périphérique (/dev/tty* ou COM*)
    // \return bool Faux si probleme de connexion
    ///////////////////////////////////////////////////////////////////////////*/
    void configureRS232(QString deviceName);

    /*///////////////////////////////////////////////////////////////////////////
    // \fn void stop()
    // \brief Stop le thread
    ///////////////////////////////////////////////////////////////////////////*/
    void stop();

signals:
    /*///////////////////////////////////////////////////////////////////////////
    // \fn void envoiTrame(QString data)
    // \brief Envoi d'une trame par RS232
    //
    // \param data Trame de commande
    ///////////////////////////////////////////////////////////////////////////*/
    void envoiTrame(QString data);

    /*///////////////////////////////////////////////////////////////////////////
    // \fn void envoiTrame(QString data)
    // \brief Réception d'une trame par RS232
    //
    // \param data Trame de réponse
    ///////////////////////////////////////////////////////////////////////////*/
    void receptionTrame(QString data);

    /*///////////////////////////////////////////////////////////////////////////
    // \fn void ouverturePort(bool reussi)
    // \brief Informe de la réussite ou pas de l'ouverture du port série
    //
    // \param reussi Vrai si ouverture réussie, faux sinon
    ///////////////////////////////////////////////////////////////////////////*/
    void ouverturePort(bool reussi);
};

#endif // THREADCOMHANDLER_H
